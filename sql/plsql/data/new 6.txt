CREATE TABLE EMP1(ID CHAR(5) PRIMARY KEY NOT NULL,
            DEPT_ID INTEGER,
            NAME CHAR(15),
            DESIGNATION CHAR(15),
            BASIC_PAY DECIMAL(10,2),
            SEX CHAR(1));
 
INSERT INTO EMP1 VALUES
        (101,
        '1',
        'RAM',
        'TYPIST',
        2000,
        'M');
 
INSERT INTO EMP1 VALUES(
        102,
        '2',
        'ARUN',
        'ANALYST',
        6000,
        'M');
 
INSERT INTO EMP1 VALUES(
        121,
        '1',
        'RUBY',
        'TYPIST',
        2010,
        'F');
 
INSERT INTO EMP1 VALUES(
        156,
        '3',
        'MARY',
        'MANAGER',
        4500,
        'F');
 
INSERT INTO EMP1 VALUES(
        123,
        '2',
        'MRIDHULA',
        'ANALYST',
        6000,
        'F');
 
INSERT INTO EMP1 VALUES(
        114,
        '4',
        'MENON',
        'CLERK',
        1500,
        'M');
 
INSERT INTO EMP1 VALUES(
        115,
        '4',
        'TIM',
        'CLERK',
        1500,
        'M');
 
INSERT INTO EMP1 VALUES(
        127,
        '2',
        'KIRAN',
        'MANAGER',
        4000,
        'M');
 
 
 
 
/*QUERIES*/
 
/*GET TABLE DESCRIPTION*/
DESCRIBE EMP1;
 
/*DISPLAY ALL RECORDS OF TABLE*/
SELECT * FROM EMP1;
 
/*DISPLAY ID,NAME,DESIGNATION & BASIC SALARY OF EVERYONE*/
SELECT ID,NAME,DESIGNATION,BASIC_PAY FROM EMP1;
 
/*DISPLAY ID,NAME OF EVERYONE FROM DEPT NO:2*/
SELECT ID,NAME FROM EMP1 WHERE DEPT_ID=2;
 
/*-------DISPLAY ID,NAME,DESIGNATION,DEPT_ID & BASIC_PAY IN DESCENDING ORDER OF BASIC_PAY*/
SELECT ID,NAME,DESIGNATION,DEPT_ID,BASIC_PAY FROM EMP1 ORDER BY BASIC_PAY DESC;
 
/*DISPLAY THE EMPLOYEES WHOSE DESIGNATION IS TYPIST*/
SELECT NAME FROM EMP1 WHERE DESIGNATION='TYPIST';
 
/*DISPLAY ALL DETAILS OF EMPLOYEES WHOSE DESIGNATION IS EITHER ANALYST OR MANAGER*/
SELECT * FROM EMP1 WHERE DESIGNATION='ANALYST' OR DESIGNATION='MANAGER';
 
/*------DISPLAY ALL DESIGNATION WITHOUT DUPLICATES*/
SELECT DISTINCT DESIGNATION FROM EMP1;
 
/*---DISPLAY THE ID,NAME,DEPT_ID,BASIC_PAY OF ALL EMPLOYEES WHO ARE EITHER MANAGER OR CLERK & BASIC_PAY IS IN RANGE OF 1400 &4500*/
SELECT ID,NAME,DEPT_ID,BASIC_PAY FROM EMP1 WHERE DESIGNATION='MANAGER' OR DESIGNATION='CLERK' AND BASIC_PAY BETWEEN 1400 AND 4500;
 
 
 
/*------------------------DISPLAY ID,NAME,DESIGNATION,BASIC_PAY,DA,HRA & NET SALARY OF ALL EMPLOYEES WITH SUITABLE HEADING AS DA,HRA &NET SALARY RESPECTIVELY
DA=7.5 OF BASIC_PAY
HRA=9% OF BASIC_PAY
NET SALARY = BASIC_PAY+DA+HRA*/
 
 
SELECT ID,NAME,DESIGNATION,BASIC_PAY,0.075*BASIC_PAY AS DA,0.09*BASIC_PAY AS HRA,BASIC_PAY+0.84*BASIC_PAY AS NET_SALARY FROM EMP1;
 
/*DISPLAY THE NUMBER OF MALE EMPLOYEES*/
SELECT COUNT(ID) FROM EMP1 WHERE SEX='M';
 
/*FIND MAXIMUM SALARY OF EACH DESIGNATION-----------GROUP BY*/
SELECT DESIGNATION,MAX(BASIC_PAY) FROM EMP1 GROUP BY DESIGNATION;
 
/*-----ADD A COLUMN MANAGER_ID INTO THE TABLE*/
ALTER TABLE EMP1 ADD MANAGER_ID INTEGER;
 
/*UPDATE VALUES OF MANAGER_ID OF EMPLOYEES
NULL FOR 101
101 -102
102 - 156
102 - 123
102 - 114
102 - 115
121 - 127*/
 
UPDATE EMP1 SET MANAGER_ID=NULL WHERE ID=101;
UPDATE EMP1 SET MANAGER_ID=101 WHERE ID IN (102,156);
UPDATE EMP1 SET MANAGER_ID=102 WHERE ID IN (123,114,115);
UPDATE EMP1 SET MANAGER_ID=121 WHERE ID IN (127);
 
/*DISPLAY MANAGER_ID OF RAM*/
SELECT MANAGER_ID FROM EMP1 WHERE NAME='RAM';
 
/*-----------------DISPLAY EMPLOYEE NAMES AND THEIR MANAGER NAMES*/
 
SELECT T.NAME,S.NAME AS MANAGER_NAME FROM EMP1 T,EMP1 S WHERE T.MANAGER_ID=S.ID;
 
 
 
 
 
 
 
/*FIND AVERAGE SALARY OF EACH DEPT*/
SELECT DEPT_ID,AVG(BASIC_PAY) FROM EMP1 GROUP BY DEPT_ID;
 
/*FIND MAXIMUM SALARY GIVEN TO EMPLOYEES*/
SELECT MAX(BASIC_PAY) AS MAX_SALARY FROM EMP1;
 
/*FIND NUMBER OF EMPLOYEES IN EACH DEPT*/
SELECT DEPT_ID,COUNT(ID) AS NO_OF_EMPLOYEES FROM EMP1 GROUP BY DEPT_ID;
 
/*FIND NUMBER OF DEPARTMENTS*/
SELECT COUNT(DISTINCT DEPT_ID) AS NO_OF_DEPTs FROM EMP1;
 
 
 
 
 
 
DAY 2
 
 
 
/*SHOW DESIGNATIONS EXISTING IN THE ORGANISATION*/
SELECT DISTINCT DESIGNATION FROM EMP1;
 
/*SHOW NUMBER OF DIFFERENT DESIGNATIONS*/
SELECT COUNT(DISTINCT DESIGNATION) FROM EMP1;
 
/*SHOW MAX SALARY GIVEN TO FEMALE EMP*/
SELECT MAX(BASIC_PAY) FROM EMP1 WHERE SEX='F';
 
/*DISPLAY FEMALE TYPIST*/
SELECT NAME FROM EMP1 WHERE SEX='F' AND DESIGNATION='TYPIST';
 
/*SHOW MALE CLERKS WITH SALARY>3000*/
SELECT NAME FROM EMP1 WHERE DESIGNATION='CLERK' AND SEX='M' AND BASIC_PAY>3000;
 
/*SHOW DETAILS OF MANAGERS OR ANALYSTS WORKING FOR DEPT ID:2*/
SELECT * FROM EMP1 WHERE DESIGNATION='MANAGER' OR DESIGNATION='ANALYST' AND DEPT_ID='2';
 
/*SHOW DESIGNATION AND SALARY OF RUBY*/
SELECT NAME,DESIGNATION,BASIC_PAY FROM EMP1 WHERE NAME='RUBY';
 
/*ADD COLUMN 'JOINING DATE' TO TABLE*/
ALTER TABLE EMP1 ADD JOINING_DATE DATE;
 
/*UPDATE APPROPRIATE VALUES FOR JOINING DATE FIELD*/
 
 
UPDATE EMP1 SET JOINING_DATE=to_date('01-02-1992','DD-MM-YYYY') WHERE NAME='RAM';
UPDATE EMP1 SET JOINING_DATE=to_date('01-03-1992','DD-MM-YYYY') WHERE NAME='ARUN';
UPDATE EMP1 SET JOINING_DATE=to_date('01-04-1992','DD-MM-YYYY') WHERE NAME='RUBY';
UPDATE EMP1 SET JOINING_DATE=to_date('01-05-1992','DD-MM-YYYY') WHERE NAME='MARY';
UPDATE EMP1 SET JOINING_DATE=to_date('01-06-1992','DD-MM-YYYY') WHERE NAME='MRIDHULA';
UPDATE EMP1 SET JOINING_DATE=to_date('01-07-1992','DD-MM-YYYY') WHERE NAME='MENON';
UPDATE EMP1 SET JOINING_DATE=to_date('01-08-1992','DD-MM-YYYY') WHERE NAME='TIM';
UPDATE EMP1 SET JOINING_DATE=to_date('01-09-1992','DD-MM-YYYY') WHERE NAME='KIRAN';
 
 
 
 
/*DISPLAY DETAILS OF EMPLOYEES ACCORDING TO SENIORITY*/
SELECT * FROM EMP1 ORDER BY JOINING_DATE ASC;
 
/*SHOW DETAILS OF EMPLOYEES ACCORDING TO DESCENDING ORDER OF SALARIES*/
SELECT * FROM EMP1 ORDER BY BASIC_PAY DESC;
 
 
 
 
 
 
 
/*CREATE NEW TABLE 'DEPARTMENT' WITH FIELDS 'DEPT_ID','DEPT_NAME'.MAKE 'DEPT_NAME' AS PRIMARY KEY*/
CREATE TABLE DEPT(DEPT_ID INTEGER PRIMARY KEY NOT NULL,
        DEPT_NAME CHAR(50));
 
       
 
 
/*----------------------MAKE DEPT_ID IN EMPLOYEE TABLE TO REFER TO DEPARTMENT TABLE*/
ALTER TABLE EMP1 ADD FOREIGN KEY (DEPT_ID) REFERENCES DEPT(DEPT_ID);
 
/*INSERT VALUES INTO DEPT TABLE*/
 
INSERT INTO DEPT VALUES('1',
            'DESIGN');
INSERT INTO DEPT VALUES('2',
            'CODING');
INSERT INTO DEPT VALUES('3',
            'TESTING');
INSERT INTO DEPT VALUES('4',
            'RESEARCH');  
 
/*-----------DISPLAY EMPLOYEE NAME & DEPT NAME*/
SELECT NAME,DEPT_NAME FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID;
 
/*--------------DISPLAY DEPT_NAME OF EMPLOYEE ARUN*/
SELECT DEPT_NAME FROM DEPT,EMP1 WHERE DEPT.DEPT_ID=EMP1.DEPT_ID AND NAME='ARUN';
 
/*DISPLAY SALARY GIVEN BY DESIGN DEPT*/
SELECT BASIC_PAY,DEPT_NAME FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID AND DEPT.DEPT_NAME='DESIGN';
 
/*DISPLAY DETAILS OF TYPIST WORKING IN DESIGN DEPT*/
SELECT * FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID AND DEPT.DEPT_NAME='DESIGN' AND EMP1.DESIGNATION='TYPIST';
 
 
 
 
/*19.DISPLAY SALARY OF EMPLOYEES IN RESEARCH DEPT*/
SELECT NAME,BASIC_PAY,DEPT_NAME FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID AND DEPT.DEPT_NAME='RESEARCH';
 
/*20.LIST FEMALE EMPLOYEES IN TESTING DEPT*/
SELECT NAME,SEX,DEPT_NAME FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID AND EMP1.SEX='F' AND DEPT.DEPT_NAME='TESTING';
 
/*21---------------DISPLAY DETAILS OF EMPLOYEES NOT WORKING IN CODING OR TESTING DEPT*/
SELECT * FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID AND DEPT.DEPT_NAME NOT IN ('CODING','TESTING');
 
/*22.---------------------------DISPLAY NAMES OF DEPARTMENTS GIVING MAX SALARY*/
SELECT DISTINCT DEPT_NAME FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID AND EMP1.BASIC_PAY IN (SELECT MAX(BASIC_PAY) FROM EMP1);
 
/*23.-----------------------------------------------------SHOW NAMES OF DEPARTMENTS WITH MINIMUM NO. OF EMPLOYEES*/
SELECT DEPT_ID,COUNT(DEPT_ID) NO_OF_EMPLOYEES FROM EMP1 WHERE ROWNUM<=1 GROUP BY DEPT_ID ORDER BY NO_OF_EMPLOYEES ASC;
/*rownum <=1 returns only first entry ....group by should be put after "where"*/
 
/*24. DO ME------------------- DISPLAY 2ND MAX SALARY*/
SELECT * FROM (SELECT BASIC_PAY FROM EMP1 WHERE BASIC_PAY NOT IN (SELECT MAX(BASIC_PAY) FROM EMP1) ORDER BY BASIC_PAY DESC) WHERE ROWNUM <=1;
 
/*25.DO ME     DISPLAY SECOND MINIMUM SALARY*/
SELECT * FROM (SELECT BASIC_PAY FROM EMP1 WHERE BASIC_PAY NOT IN (SELECT MIN(BASIC_PAY) FROM EMP1) ORDER BY BASIC_PAY ) WHERE ROWNUM <=1;
 
/*26. DO ME -----------DISPLAY NAMES OF EMPLOYEES GETTING SALARY> AVG.SALARY OF THEIR DEPT*/
 SELECT NAME FROM EMP1 WHERE BASIC_PAY>(SELECT AVG(BASIC_PAY) FROM EMP1);
 
 /*27. DO ME  ------DISPLAY NAMES OF EMPLOYEES WORKING UNDER MANAGER RAM*/
 SELECT NAME FROM EMP1 WHERE MANAGER_ID=(SELECT ID FROM EMP1 WHERE NAME='RAM');
 
 /*28. DO ME----------    DISPLAY DEPT ID & TOTAL NO.OF EMPLOYEES AS 'NO. OF DEPT EMPLOYEES' FOR ONLY THSOE DEPTS WITH MORE THAN3 EMPLOYEES*/
 SELECT DEPT_ID,COUNT(*) AS NO_OF_EMPLOYEES FROM EMP1 GROUP BY DEPT_ID HAVING COUNT(*)>3;
 
 /*29.-----DISPLAY DEPT_ID & MIN SALARY AS 'LOWEST SALARAY' FOR THOSE DEPTS WITH MIN SALARAY ABOVE 2500*/
 SELECT DEPT_ID,MIN(BASIC_PAY) AS LOWEST_SALARY FROM EMP1 GROUP BY DEPT_ID HAVING MIN(BASIC_PAY)>2500;
 
 /*30.-----DISPLAY NAMES OF EMP WHOSE SALARY IS MAX,GIVEN BY THEIR DEPT             ---------------(USE IN STATEMENT)*/
 /*SELECT NAME FROM EMP1 WHERE BASIC_PAY IN (SELECT MAX(BASIC_PAY) FROM EMP1 GROUP BY DEPT_ID);*/
 SELECT NAME FROM EMP1 T WHERE BASIC_PAY IN (SELECT MAX(BASIC_PAY) FROM EMP1 WHERE T.DEPT_ID=DEPT_ID);
 
 
 /*31. DISPLAY NAME OF EMP IF THEIR SALARY IS GREATER THAN SALARY OF SOME OTHER EMP*/
 SELECT NAME FROM EMP1 WHERE BASIC_PAY NOT IN (SELECT MIN(BASIC_PAY) FROM EMP1);
 
 /*32.------DISPLAY NAMES OF EMP IF THEIR SALARY IS GREATER THAN SALARY OF SOME OTHER EMP OR LESS THAN SALARY OF SOME OTHER EMP*/
 SELECT NAME FROM EMP1 WHERE BASIC_PAY NOT IN (SELECT MIN(BASIC_PAY) FROM EMP1) OR BASIC_PAY NOT IN(SELECT MAX(BASIC_PAY) FROM EMP1);
 
 /*33.ADD A COLUMN 'CITY' FOR EMP TABLE*/
 ALTER TABLE EMP1 ADD CITY CHAR(30);
 
 /*34.ADD A COLUMN 'CITY' FOR DEPT TABLE*/
 ALTER TABLE DEPT ADD CITY CHAR(30);
 
 
 /*NOT QUESTION: INSERT CITY NAME FOR EVERYONE*/
 UPDATE EMP1 SET CITY='CHICAGO' WHERE NAME='RAM';
 UPDATE EMP1 SET CITY='LONDON' WHERE NAME='ARUN';
 UPDATE EMP1 SET CITY='DELHI' WHERE NAME='RUBY';
 UPDATE EMP1 SET CITY='CHICAGO' WHERE NAME='MARY';
 UPDATE EMP1 SET CITY='KOCHI' WHERE NAME='MRIDHULA';
 UPDATE EMP1 SET CITY='KOTTAYAM' WHERE NAME='MENON';
 UPDATE EMP1 SET CITY='ALAPPUZHA' WHERE NAME='TIM';
 UPDATE EMP1 SET CITY='KOTTAYAM' WHERE NAME='KIRAN';
 
 UPDATE DEPT SET CITY='CHICAGO' WHERE DEPT_ID='1';
 UPDATE DEPT SET CITY='MUMBAI' WHERE DEPT_ID='2';
 UPDATE DEPT SET CITY='KANNUR' WHERE DEPT_ID='3';
 UPDATE DEPT SET CITY='KOTTAYAM' WHERE DEPT_ID='4';
 
 
 /*35.FIND NAMES OF EMPLOYEES WHO'RE FROM THE SAME CITY AS THEIR COMPANY*/
 SELECT NAME FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID AND EMP1.CITY=DEPT.CITY;
 
 
 
 DAY 3
 
 
 
 /*36.----------------------------------------------------- DISPLAY NAMES OF DEPTS GIVING SMALLEST TOTAL SALARY------------START FROM INSIDE MOST SUBQUERY*/
 SELECT DEPT_NAME FROM DEPT WHERE DEPT_ID=(SELECT DEPT_ID FROM (SELECT DEPT_ID,SUM(BASIC_PAY) AS TOTAL FROM EMP1 GROUP BY DEPT_ID ORDER BY TOTAL) WHERE ROWNUM<=1);
 
 /*37.----------------------------------DISPLAY NAMES OF EMPLOYEES JOINED DURING 1990s ------------LIKE KEYWORD IS USED HERE*/
 SELECT NAME FROM EMP1 WHERE JOINING_DATE LIKE '%9_';
 
 /*38.------Show names of employees joined during month of august*/
 SELECT NAME FROM EMP1 WHERE JOINING_DATE LIKE '___AUG%';
 
 /*39.Display details of depts having no employees*/
 SELECT * FROM DEPT WHERE DEPT_ID NOT IN (SELECT DEPT_ID FROM EMP1);
 
 /*40.----DISPLAY DETAILS OF DEPTs HAVING MORE THAN 2 EMPLOYEES*/
 SELECT * FROM DEPT WHERE DEPT_ID IN (SELECT DEPT_ID FROM (SELECT DEPT_ID,COUNT(DEPT_ID) AS NUM FROM EMP1 GROUP BY DEPT_ID) WHERE NUM>=2);
 
 /*41.-------------------------FOR EACH DEPT THAT HAS MORE THAN 4 EMPLOYEES,RETREIVE THE DEPT_ID AND NO.OF EMPLOYEES WHO'RE GETTING SALARY MORE THAN 5000*/
 /*-------------------------------HAVING COMES AFTER GROUP BY*/
 SELECT DEPT_ID,COUNT(*) FROM EMP1 WHERE BASIC_PAY>5000 GROUP BY DEPT_ID HAVING COUNT(*)>4;
 
 /*42.INSERT DETAILS OF SOME EMP WHO'RE NOT ASSIGNED A DEPT*/
 INSERT INTO EMP1 VALUES (144,NULL,'CATHY','PRO',3500,'F',NULL,TO_DATE('01-01-2016','dd-mm-yyyy'),'EKM');
 INSERT INTO EMP1 VALUES (143,NULL,'RAJU','SWEEPER',750,'M',101,TO_DATE('01-05-2016','dd-mm-yyyy'),'KTM');
 
 /*43.-------------------------------------------SHOW EMP & THEIR DEPT NAMES. IF AN EMP IS NOT ASSIGNED A DEPT, DISPLAY HIS NAME WITH DEPT_ID AS NULL*/
 /*NVL FUNCTION PRINTS DEPT_NAME AS 'NONE' IF DEPT_NAME IS NULL*/
 /*NOTICE 'LEFT JOIN' AND 'ON'*/
 SELECT NAME,NVL(DEPT_NAME,'NONE') AS DEPT_NAME FROM EMP1 LEFT JOIN DEPT ON  EMP1.DEPT_ID=DEPT.DEPT_ID;
 
 /*44.SHOW NAMES OF EMP & THEIR DEPT_NAME IF AN EMP IS NOT ASSIGNED WITH A DEPT, DISPLAY HIS NAME WITH DEPT_ID AS ZERO*/
 SELECT NAME,NVL(DEPT_NAME,'0') AS DEPT_NAME FROM EMP1 LEFT JOIN DEPT ON  EMP1.DEPT_ID=DEPT.DEPT_ID;
RAW Paste Data

CREATE TABLE EMP1(ID CHAR(5) PRIMARY KEY NOT NULL,
			DEPT_ID INTEGER,
			NAME CHAR(15),
			DESIGNATION CHAR(15),
			BASIC_PAY DECIMAL(10,2),
			SEX CHAR(1));

INSERT INTO EMP1 VALUES
 		(101,
		'1',
		'RAM',
		'TYPIST',
		2000,
		'M');

INSERT INTO EMP1 VALUES(
		102,
		'2',
		'ARUN',
		'ANALYST',
		6000,
		'M');

INSERT INTO EMP1 VALUES(
		121,
		'1',
		'RUBY',
		'TYPIST',
		2010,
		'F');

INSERT INTO EMP1 VALUES(
		156,
		'3',
		'MARY',
		'MANAGER',
		4500,
		'F');

INSERT INTO EMP1 VALUES(
		123,
		'2',
		'MRIDHULA',
		'ANALYST',
		6000,
		'F');

INSERT INTO EMP1 VALUES(
		114,
		'4',
		'MENON',
		'CLERK',
		1500,
		'M');

INSERT INTO EMP1 VALUES(
		115,
		'4',
		'TIM',
		'CLERK',
		1500,
		'M');

INSERT INTO EMP1 VALUES(
		127,
		'2',
		'KIRAN',
		'MANAGER',
		4000,
		'M');




/*QUERIES*/

/*GET TABLE DESCRIPTION*/
DESCRIBE EMP1;

/*DISPLAY ALL RECORDS OF TABLE*/
SELECT * FROM EMP1;

/*DISPLAY ID,NAME,DESIGNATION & BASIC SALARY OF EVERYONE*/
SELECT ID,NAME,DESIGNATION,BASIC_PAY FROM EMP1;

/*DISPLAY ID,NAME OF EVERYONE FROM DEPT NO:2*/
SELECT ID,NAME FROM EMP1 WHERE DEPT_ID=2;

/*-------DISPLAY ID,NAME,DESIGNATION,DEPT_ID & BASIC_PAY IN DESCENDING ORDER OF BASIC_PAY*/
SELECT ID,NAME,DESIGNATION,DEPT_ID,BASIC_PAY FROM EMP1 ORDER BY BASIC_PAY DESC;

/*DISPLAY THE EMPLOYEES WHOSE DESIGNATION IS TYPIST*/
SELECT NAME FROM EMP1 WHERE DESIGNATION='TYPIST';

/*DISPLAY ALL DETAILS OF EMPLOYEES WHOSE DESIGNATION IS EITHER ANALYST OR MANAGER*/
SELECT * FROM EMP1 WHERE DESIGNATION='ANALYST' OR DESIGNATION='MANAGER';

/*------DISPLAY ALL DESIGNATION WITHOUT DUPLICATES*/
SELECT DISTINCT DESIGNATION FROM EMP1;

/*---DISPLAY THE ID,NAME,DEPT_ID,BASIC_PAY OF ALL EMPLOYEES WHO ARE EITHER MANAGER OR CLERK & BASIC_PAY IS IN RANGE OF 1400 &4500*/
SELECT ID,NAME,DEPT_ID,BASIC_PAY FROM EMP1 WHERE DESIGNATION='MANAGER' OR DESIGNATION='CLERK' AND BASIC_PAY BETWEEN 1400 AND 4500;



/*------------------------DISPLAY ID,NAME,DESIGNATION,BASIC_PAY,DA,HRA & NET SALARY OF ALL EMPLOYEES WITH SUITABLE HEADING AS DA,HRA &NET SALARY RESPECTIVELY
DA=7.5 OF BASIC_PAY
HRA=9% OF BASIC_PAY
NET SALARY = BASIC_PAY+DA+HRA*/


SELECT ID,NAME,DESIGNATION,BASIC_PAY,0.075*BASIC_PAY AS DA,0.09*BASIC_PAY AS HRA,BASIC_PAY+0.84*BASIC_PAY AS NET_SALARY FROM EMP1;

/*DISPLAY THE NUMBER OF MALE EMPLOYEES*/
SELECT COUNT(ID) FROM EMP1 WHERE SEX='M';

/*FIND MAXIMUM SALARY OF EACH DESIGNATION-----------GROUP BY*/
SELECT DESIGNATION,MAX(BASIC_PAY) FROM EMP1 GROUP BY DESIGNATION;

/*-----ADD A COLUMN MANAGER_ID INTO THE TABLE*/
ALTER TABLE EMP1 ADD MANAGER_ID INTEGER;

/*UPDATE VALUES OF MANAGER_ID OF EMPLOYEES
NULL FOR 101
101 -102
102 - 156
102 - 123
102 - 114
102 - 115
121 - 127*/

UPDATE EMP1 SET MANAGER_ID=NULL WHERE ID=101;
UPDATE EMP1 SET MANAGER_ID=101 WHERE ID IN (102,156);
UPDATE EMP1 SET MANAGER_ID=102 WHERE ID IN (123,114,115);
UPDATE EMP1 SET MANAGER_ID=121 WHERE ID IN (127);

/*DISPLAY MANAGER_ID OF RAM*/
SELECT MANAGER_ID FROM EMP1 WHERE NAME='RAM';

/*-----------------DISPLAY EMPLOYEE NAMES AND THEIR MANAGER NAMES*/

SELECT T.NAME,S.NAME AS MANAGER_NAME FROM EMP1 T,EMP1 S WHERE T.MANAGER_ID=S.ID;







/*FIND AVERAGE SALARY OF EACH DEPT*/
SELECT DEPT_ID,AVG(BASIC_PAY) FROM EMP1 GROUP BY DEPT_ID;

/*FIND MAXIMUM SALARY GIVEN TO EMPLOYEES*/
SELECT MAX(BASIC_PAY) AS MAX_SALARY FROM EMP1;

/*FIND NUMBER OF EMPLOYEES IN EACH DEPT*/
SELECT DEPT_ID,COUNT(ID) AS NO_OF_EMPLOYEES FROM EMP1 GROUP BY DEPT_ID;

/*FIND NUMBER OF DEPARTMENTS*/
SELECT COUNT(DISTINCT DEPT_ID) AS NO_OF_DEPTs FROM EMP1;






DAY 2



/*SHOW DESIGNATIONS EXISTING IN THE ORGANISATION*/
SELECT DISTINCT DESIGNATION FROM EMP1;

/*SHOW NUMBER OF DIFFERENT DESIGNATIONS*/
SELECT COUNT(DISTINCT DESIGNATION) FROM EMP1;

/*SHOW MAX SALARY GIVEN TO FEMALE EMP*/
SELECT MAX(BASIC_PAY) FROM EMP1 WHERE SEX='F';

/*DISPLAY FEMALE TYPIST*/
SELECT NAME FROM EMP1 WHERE SEX='F' AND DESIGNATION='TYPIST';

/*SHOW MALE CLERKS WITH SALARY>3000*/
SELECT NAME FROM EMP1 WHERE DESIGNATION='CLERK' AND SEX='M' AND BASIC_PAY>3000;

/*SHOW DETAILS OF MANAGERS OR ANALYSTS WORKING FOR DEPT ID:2*/
SELECT * FROM EMP1 WHERE DESIGNATION='MANAGER' OR DESIGNATION='ANALYST' AND DEPT_ID='2';

/*SHOW DESIGNATION AND SALARY OF RUBY*/
SELECT NAME,DESIGNATION,BASIC_PAY FROM EMP1 WHERE NAME='RUBY';

/*ADD COLUMN 'JOINING DATE' TO TABLE*/
ALTER TABLE EMP1 ADD JOINING_DATE DATE;

/*UPDATE APPROPRIATE VALUES FOR JOINING DATE FIELD*/


UPDATE EMP1 SET JOINING_DATE=to_date('01-02-1992','DD-MM-YYYY') WHERE NAME='RAM';
UPDATE EMP1 SET JOINING_DATE=to_date('01-03-1992','DD-MM-YYYY') WHERE NAME='ARUN';
UPDATE EMP1 SET JOINING_DATE=to_date('01-04-1992','DD-MM-YYYY') WHERE NAME='RUBY';
UPDATE EMP1 SET JOINING_DATE=to_date('01-05-1992','DD-MM-YYYY') WHERE NAME='MARY';
UPDATE EMP1 SET JOINING_DATE=to_date('01-06-1992','DD-MM-YYYY') WHERE NAME='MRIDHULA';
UPDATE EMP1 SET JOINING_DATE=to_date('01-07-1992','DD-MM-YYYY') WHERE NAME='MENON';
UPDATE EMP1 SET JOINING_DATE=to_date('01-08-1992','DD-MM-YYYY') WHERE NAME='TIM';
UPDATE EMP1 SET JOINING_DATE=to_date('01-09-1992','DD-MM-YYYY') WHERE NAME='KIRAN';




/*DISPLAY DETAILS OF EMPLOYEES ACCORDING TO SENIORITY*/
SELECT * FROM EMP1 ORDER BY JOINING_DATE ASC;

/*SHOW DETAILS OF EMPLOYEES ACCORDING TO DESCENDING ORDER OF SALARIES*/
SELECT * FROM EMP1 ORDER BY BASIC_PAY DESC;







/*CREATE NEW TABLE 'DEPARTMENT' WITH FIELDS 'DEPT_ID','DEPT_NAME'.MAKE 'DEPT_NAME' AS PRIMARY KEY*/
CREATE TABLE DEPT(DEPT_ID INTEGER PRIMARY KEY NOT NULL,
		DEPT_NAME CHAR(50));

		


/*----------------------MAKE DEPT_ID IN EMPLOYEE TABLE TO REFER TO DEPARTMENT TABLE*/
ALTER TABLE EMP1 ADD FOREIGN KEY (DEPT_ID) REFERENCES DEPT(DEPT_ID);

/*INSERT VALUES INTO DEPT TABLE*/

INSERT INTO DEPT VALUES('1',
			'DESIGN');
INSERT INTO DEPT VALUES('2',
			'CODING');
INSERT INTO DEPT VALUES('3',
			'TESTING');
INSERT INTO DEPT VALUES('4',
			'RESEARCH');  

/*-----------DISPLAY EMPLOYEE NAME & DEPT NAME*/
SELECT NAME,DEPT_NAME FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID;

/*--------------DISPLAY DEPT_NAME OF EMPLOYEE ARUN*/
SELECT DEPT_NAME FROM DEPT,EMP1 WHERE DEPT.DEPT_ID=EMP1.DEPT_ID AND NAME='ARUN'; 

/*DISPLAY SALARY GIVEN BY DESIGN DEPT*/
SELECT BASIC_PAY,DEPT_NAME FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID AND DEPT.DEPT_NAME='DESIGN';

/*DISPLAY DETAILS OF TYPIST WORKING IN DESIGN DEPT*/
SELECT * FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID AND DEPT.DEPT_NAME='DESIGN' AND EMP1.DESIGNATION='TYPIST';




/*19.DISPLAY SALARY OF EMPLOYEES IN RESEARCH DEPT*/
SELECT NAME,BASIC_PAY,DEPT_NAME FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID AND DEPT.DEPT_NAME='RESEARCH';

/*20.LIST FEMALE EMPLOYEES IN TESTING DEPT*/
SELECT NAME,SEX,DEPT_NAME FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID AND EMP1.SEX='F' AND DEPT.DEPT_NAME='TESTING';

/*21---------------DISPLAY DETAILS OF EMPLOYEES NOT WORKING IN CODING OR TESTING DEPT*/
SELECT * FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID AND DEPT.DEPT_NAME NOT IN ('CODING','TESTING');

/*22.---------------------------DISPLAY NAMES OF DEPARTMENTS GIVING MAX SALARY*/
SELECT DISTINCT DEPT_NAME FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID AND EMP1.BASIC_PAY IN (SELECT MAX(BASIC_PAY) FROM EMP1);

/*23.-----------------------------------------------------SHOW NAMES OF DEPARTMENTS WITH MINIMUM NO. OF EMPLOYEES*/
SELECT DEPT_ID,COUNT(DEPT_ID) NO_OF_EMPLOYEES FROM EMP1 WHERE ROWNUM<=1 GROUP BY DEPT_ID ORDER BY NO_OF_EMPLOYEES ASC;
/*rownum <=1 returns only first entry ....group by should be put after "where"*/

/*24. DO ME------------------- DISPLAY 2ND MAX SALARY*/
SELECT * FROM (SELECT BASIC_PAY FROM EMP1 WHERE BASIC_PAY NOT IN (SELECT MAX(BASIC_PAY) FROM EMP1) ORDER BY BASIC_PAY DESC) WHERE ROWNUM <=1; 

/*25.DO ME     DISPLAY SECOND MINIMUM SALARY*/
SELECT * FROM (SELECT BASIC_PAY FROM EMP1 WHERE BASIC_PAY NOT IN (SELECT MIN(BASIC_PAY) FROM EMP1) ORDER BY BASIC_PAY ) WHERE ROWNUM <=1;

/*26. DO ME -----------DISPLAY NAMES OF EMPLOYEES GETTING SALARY> AVG.SALARY OF THEIR DEPT*/
 SELECT NAME FROM EMP1 WHERE BASIC_PAY>(SELECT AVG(BASIC_PAY) FROM EMP1);
 
 /*27. DO ME  ------DISPLAY NAMES OF EMPLOYEES WORKING UNDER MANAGER RAM*/
 SELECT NAME FROM EMP1 WHERE MANAGER_ID=(SELECT ID FROM EMP1 WHERE NAME='RAM');
 
 /*28. DO ME----------    DISPLAY DEPT ID & TOTAL NO.OF EMPLOYEES AS 'NO. OF DEPT EMPLOYEES' FOR ONLY THSOE DEPTS WITH MORE THAN3 EMPLOYEES*/
 SELECT DEPT_ID,COUNT(*) AS NO_OF_EMPLOYEES FROM EMP1 GROUP BY DEPT_ID HAVING COUNT(*)>3;
 
 /*29.-----DISPLAY DEPT_ID & MIN SALARY AS 'LOWEST SALARAY' FOR THOSE DEPTS WITH MIN SALARAY ABOVE 2500*/
 SELECT DEPT_ID,MIN(BASIC_PAY) AS LOWEST_SALARY FROM EMP1 GROUP BY DEPT_ID HAVING MIN(BASIC_PAY)>2500;
 
 /*30.-----DISPLAY NAMES OF EMP WHOSE SALARY IS MAX,GIVEN BY THEIR DEPT             ---------------(USE IN STATEMENT)*/
 /*SELECT NAME FROM EMP1 WHERE BASIC_PAY IN (SELECT MAX(BASIC_PAY) FROM EMP1 GROUP BY DEPT_ID);*/
 SELECT NAME FROM EMP1 T WHERE BASIC_PAY IN (SELECT MAX(BASIC_PAY) FROM EMP1 WHERE T.DEPT_ID=DEPT_ID);


 /*31. DISPLAY NAME OF EMP IF THEIR SALARY IS GREATER THAN SALARY OF SOME OTHER EMP*/
 SELECT NAME FROM EMP1 WHERE BASIC_PAY NOT IN (SELECT MIN(BASIC_PAY) FROM EMP1);
 
 /*32.------DISPLAY NAMES OF EMP IF THEIR SALARY IS GREATER THAN SALARY OF SOME OTHER EMP OR LESS THAN SALARY OF SOME OTHER EMP*/
 SELECT NAME FROM EMP1 WHERE BASIC_PAY NOT IN (SELECT MIN(BASIC_PAY) FROM EMP1) OR BASIC_PAY NOT IN(SELECT MAX(BASIC_PAY) FROM EMP1);
 
 /*33.ADD A COLUMN 'CITY' FOR EMP TABLE*/
 ALTER TABLE EMP1 ADD CITY CHAR(30);
 
 /*34.ADD A COLUMN 'CITY' FOR DEPT TABLE*/
 ALTER TABLE DEPT ADD CITY CHAR(30);
 
 
 /*NOT QUESTION: INSERT CITY NAME FOR EVERYONE*/
 UPDATE EMP1 SET CITY='CHICAGO' WHERE NAME='RAM';
 UPDATE EMP1 SET CITY='LONDON' WHERE NAME='ARUN';
 UPDATE EMP1 SET CITY='DELHI' WHERE NAME='RUBY';
 UPDATE EMP1 SET CITY='CHICAGO' WHERE NAME='MARY';
 UPDATE EMP1 SET CITY='KOCHI' WHERE NAME='MRIDHULA';
 UPDATE EMP1 SET CITY='KOTTAYAM' WHERE NAME='MENON';
 UPDATE EMP1 SET CITY='ALAPPUZHA' WHERE NAME='TIM';
 UPDATE EMP1 SET CITY='KOTTAYAM' WHERE NAME='KIRAN';
 
 UPDATE DEPT SET CITY='CHICAGO' WHERE DEPT_ID='1';
 UPDATE DEPT SET CITY='MUMBAI' WHERE DEPT_ID='2';
 UPDATE DEPT SET CITY='KANNUR' WHERE DEPT_ID='3';
 UPDATE DEPT SET CITY='KOTTAYAM' WHERE DEPT_ID='4';

 
 /*35.FIND NAMES OF EMPLOYEES WHO'RE FROM THE SAME CITY AS THEIR COMPANY*/
 SELECT NAME FROM EMP1,DEPT WHERE EMP1.DEPT_ID=DEPT.DEPT_ID AND EMP1.CITY=DEPT.CITY;
 
 
 
 DAY 3
 
 
 
 /*36.----------------------------------------------------- DISPLAY NAMES OF DEPTS GIVING SMALLEST TOTAL SALARY------------START FROM INSIDE MOST SUBQUERY*/
 SELECT DEPT_NAME FROM DEPT WHERE DEPT_ID=(SELECT DEPT_ID FROM (SELECT DEPT_ID,SUM(BASIC_PAY) AS TOTAL FROM EMP1 GROUP BY DEPT_ID ORDER BY TOTAL) WHERE ROWNUM<=1);
 
 /*37.----------------------------------DISPLAY NAMES OF EMPLOYEES JOINED DURING 1990s ------------LIKE KEYWORD IS USED HERE*/
 SELECT NAME FROM EMP1 WHERE JOINING_DATE LIKE '%9_';
 
 /*38.------Show names of employees joined during month of august*/
 SELECT NAME FROM EMP1 WHERE JOINING_DATE LIKE '___AUG%';
 
 /*39.Display details of depts having no employees*/
 SELECT * FROM DEPT WHERE DEPT_ID NOT IN (SELECT DEPT_ID FROM EMP1);
 
 /*40.----DISPLAY DETAILS OF DEPTs HAVING MORE THAN 2 EMPLOYEES*/
 SELECT * FROM DEPT WHERE DEPT_ID IN (SELECT DEPT_ID FROM (SELECT DEPT_ID,COUNT(DEPT_ID) AS NUM FROM EMP1 GROUP BY DEPT_ID) WHERE NUM>=2);
 
 /*41.-------------------------FOR EACH DEPT THAT HAS MORE THAN 4 EMPLOYEES,RETREIVE THE DEPT_ID AND NO.OF EMPLOYEES WHO'RE GETTING SALARY MORE THAN 5000*/
 /*-------------------------------HAVING COMES AFTER GROUP BY*/
 SELECT DEPT_ID,COUNT(*) FROM EMP1 WHERE BASIC_PAY>5000 GROUP BY DEPT_ID HAVING COUNT(*)>4;
 
 /*42.INSERT DETAILS OF SOME EMP WHO'RE NOT ASSIGNED A DEPT*/
 INSERT INTO EMP1 VALUES (144,NULL,'CATHY','PRO',3500,'F',NULL,TO_DATE('01-01-2016','dd-mm-yyyy'),'EKM');
 INSERT INTO EMP1 VALUES (143,NULL,'RAJU','SWEEPER',750,'M',101,TO_DATE('01-05-2016','dd-mm-yyyy'),'KTM');
 
 /*43.-------------------------------------------SHOW EMP & THEIR DEPT NAMES. IF AN EMP IS NOT ASSIGNED A DEPT, DISPLAY HIS NAME WITH DEPT_ID AS NULL*/
 /*NVL FUNCTION PRINTS DEPT_NAME AS 'NONE' IF DEPT_NAME IS NULL*/
 /*NOTICE 'LEFT JOIN' AND 'ON'*/
 SELECT NAME,NVL(DEPT_NAME,'NONE') AS DEPT_NAME FROM EMP1 LEFT JOIN DEPT ON  EMP1.DEPT_ID=DEPT.DEPT_ID;
 
 /*44.SHOW NAMES OF EMP & THEIR DEPT_NAME IF AN EMP IS NOT ASSIGNED WITH A DEPT, DISPLAY HIS NAME WITH DEPT_ID AS ZERO*/
 SELECT NAME,NVL(DEPT_NAME,'0') AS DEPT_NAME FROM EMP1 LEFT JOIN DEPT ON  EMP1.DEPT_ID=DEPT.DEPT_ID;
